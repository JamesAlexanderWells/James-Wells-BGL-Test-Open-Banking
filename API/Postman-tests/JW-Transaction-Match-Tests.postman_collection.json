{
	"info": {
		"_postman_id": "f99410a2-4a08-4b26-b236-616226feca59",
		"name": "JW-Transaction-Match-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Transaction with merchant name in DB",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response should have status of 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request should match transaction description with matched merchant name and transaction description\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.merchantName).to.eql(\"DVLA\");\r",
							"    pm.expect(jsonData.transactionDescription).to.eql(\"dvla vehicle tax\");\r",
							"    pm.expect(jsonData.created).to.eql(false);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"transactionDescription\": \"dvla vehicle tax\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/jw-api-bgl-test/transaction/match",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"jw-api-bgl-test",
						"transaction",
						"match"
					]
				}
			},
			"response": []
		},
		{
			"name": "Transaction with no merchant name in DB",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response should have status of 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Request should return an unknown merchant name and transaction description\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.merchantName).to.eql(\"Unknown Merchant Name\");\r",
							"    pm.expect(jsonData.created).to.eql(true);\r",
							"    pm.expect(jsonData.transactionDescription).to.exist;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var current_timestamp = new Date();\r",
							"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"transactionDescription\": \"{{current_timestamp}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/jw-api-bgl-test/transaction/match",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"jw-api-bgl-test",
						"transaction",
						"match"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid Request Body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response should have status of 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should display invalid body error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.errors[0].msg).to.eql(\"transactionDescription must be a non-empty string!\");\r",
							"    pm.expect(jsonData.errors[0].param).to.eql(\"transactionDescription\");\r",
							"    pm.expect(jsonData.errors[0].location).to.eql(\"body\");\r",
							"\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"invalidBody\": \"dvla vehicle tax\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/jw-api-bgl-test/transaction/match",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"jw-api-bgl-test",
						"transaction",
						"match"
					]
				}
			},
			"response": []
		}
	]
}